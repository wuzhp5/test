package nc.bs.cache.constrast;

import java.util.ArrayList;
import java.util.List;

import nc.bs.framework.common.NCLocator;
import nc.itf.uap.IUAPQueryBS;
import nc.jdbc.framework.processor.BeanListProcessor;
import nc.vo.pub.BusinessException;
import nc.vo.sync.constrast.ConstrastVO;

public class ConstrastCacheCenter {

	private IUAPQueryBS bs = NCLocator.getInstance().lookup(IUAPQueryBS.class);
	/**
	 * 按单据类型查询对照表
	 * @param billType
	 * @return
	 * @throws BusinessException
	 */
	@SuppressWarnings("unchecked")
	public List<ConstrastVO> queryConstrastVOs(String billType) throws BusinessException{
		StringBuffer sql = new StringBuffer().append("select ");
		sql.append(ConstrastVO.getColumns4Sql());
		sql.append(" from "+ConstrastVO.getDefaultTable());
		sql.append(" where billtype = '"+billType+"' and field <> '~' and exfield <> '~'");
		return (List<ConstrastVO>) bs.executeQuery(billType, new BeanListProcessor(ConstrastVO.class));
	}
	
	/**
	 * 获取不能为空的字段信息
	 * @param vos
	 * @return
	 */
	public List<String> getNotNullVOs(List<ConstrastVO> vos){
		List<String> constrs = new ArrayList<String>();
		for(ConstrastVO vo : vos){
			if(vo.getIsnull().equalsIgnoreCase("N")){
				constrs.add(vo.getExfield());
			}
		}
		nc.bs.bd.baseservice.ArrayClassConvertUtil.convert(constrs.toArray(), String.class);
		return constrs;
	}
	
	
}
